{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","time","Date","toUTCString","slice","this","window","setInterval","setState","clearInterval","name","props","className","Component","App","hasClock","clockName","hideClock","event","preventDefault","showClock","document","addEventListener","newClockName","value","now","toString","getRandomName","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACUC,aADV,IAGEC,MAAoB,CAClBC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAJ/C,uDAOE,WAAqB,IAAD,OAClBC,KAAKN,QAAUO,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEP,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,OAC1D,OAVP,kCAaE,WACMC,KAAKN,SACPO,OAAOG,cAAcJ,KAAKN,WAfhC,oBAmBE,WACE,IAAQW,EAASL,KAAKM,MAAdD,KACAT,EAASI,KAAKL,MAAdC,KAER,OACE,sBAAKW,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCF,IAChC,YACD,sBAAME,UAAU,cAAhB,SAA+BX,WA3BvC,GAA2BY,aCKpB,IAAMC,EAAb,4MACEd,MAAkB,CAChBe,UAAU,EACVC,UAAW,WAHf,EAMEjB,QAAU,EANZ,EA2BEkB,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKX,SAAS,CAAEO,UAAU,KA7B9B,EAgCEK,UAAY,WACV,EAAKZ,SAAS,CAAEO,UAAU,KAjC9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAejB,KAAKY,WAC9CI,SAASC,iBAAiB,QAASjB,KAAKe,WAExCf,KAAKN,QAAUO,OAAOC,aAAY,WAChC,IAAMgB,EAxBZ,WACE,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAqBSG,GAErB,EAAKnB,SAAS,CAAEQ,UAAWO,MAC1B,QAhBP,kCAmBE,WACEF,SAASO,oBAAoB,cAAevB,KAAKY,WACjDI,SAASO,oBAAoB,QAASvB,KAAKe,WACvCf,KAAKN,SACPO,OAAOG,cAAcJ,KAAKN,WAvBhC,oBAoCE,WACE,MAAgCM,KAAKL,MAA7Be,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAOL,KAAMM,WA1ClC,GAAyBH,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.c8490706.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype ClockState = {\n  time: string;\n};\n\nexport class Clock extends Component<Props, ClockState> {\n  private timerId: number | undefined;\n\n  state: ClockState = {\n    time: new Date().toUTCString().slice(-12, -4),\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date().toUTCString().slice(-12, -4) });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{name}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">{time}</span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype AppState = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component {\n  state: AppState = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n\n    this.timerId = window.setInterval(() => {\n      const newClockName = getRandomName();\n\n      this.setState({ clockName: newClockName });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  hideClock = (event: Event) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}