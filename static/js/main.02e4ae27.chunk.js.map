{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","time","Date","toUTCString","slice","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","Component","App","hasClock","hideClock","event","preventDefault","showClock","document","addEventListener","newClockName","value","now","toString","getRandomName","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,QAAU,EADZ,EAGEC,MAAe,CACbC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAJ/C,uDAOE,WAAqB,IAAD,OAClBC,KAAKN,QAAUO,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEP,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAG3DK,QAAQC,KAAK,EAAKV,MAAMC,QACvB,OAbP,gCAgBE,SAAmBU,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WAErCH,QAAQK,MAAR,uBACkBH,EAAUC,UAD5B,eAC4CP,KAAKQ,MAAMD,cApB7D,kCAyBE,WACMP,KAAKN,SACPO,OAAOS,cAAcV,KAAKN,WA3BhC,oBA+BE,WACE,IAAQa,EAAcP,KAAKQ,MAAnBD,UACAX,EAASI,KAAKL,MAAdC,KAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCJ,IAChC,YACD,sBAAMI,UAAU,cAAhB,SAA+Bf,WAvCvC,GAA2BgB,aCKpB,IAAMC,EAAb,4MACElB,MAAkB,CAChBmB,UAAU,EACVP,UAAW,WAHf,EAMEb,QAAU,EANZ,EA2BEqB,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKd,SAAS,CAAEW,UAAU,KA7B9B,EAgCEI,UAAY,WACV,EAAKf,SAAS,CAAEW,UAAU,KAjC9B,uDAQE,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,cAAepB,KAAKe,WAC9CI,SAASC,iBAAiB,QAASpB,KAAKkB,WAExClB,KAAKN,QAAUO,OAAOC,aAAY,WAChC,IAAMmB,EAxBZ,WACE,IAAMC,EAAQzB,KAAK0B,MAAMC,WAAWzB,OAAO,GAE3C,MAAM,SAAN,OAAgBuB,GAqBSG,GAErB,EAAKtB,SAAS,CAAEI,UAAWc,MAC1B,QAhBP,kCAmBE,WACEF,SAASO,oBAAoB,cAAe1B,KAAKe,WACjDI,SAASO,oBAAoB,QAAS1B,KAAKkB,WACvClB,KAAKN,SACPO,OAAOS,cAAcV,KAAKN,WAvBhC,oBAoCE,WACE,MAAgCM,KAAKL,MAA7BmB,EAAR,EAAQA,SAAUP,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAOP,UAAWA,WA1CvC,GAAyBK,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.02e4ae27.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  time: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  timerId = 0;\n\n  state: State = {\n    time: new Date().toUTCString().slice(-12, -4),\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date().toUTCString().slice(-12, -4) });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(\n        `Renamed from ${prevProps.clockName} to ${this.props.clockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{clockName}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">{time}</span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype AppState = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component {\n  state: AppState = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n\n    this.timerId = window.setInterval(() => {\n      const newClockName = getRandomName();\n\n      this.setState({ clockName: newClockName });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  hideClock = (event: Event) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}